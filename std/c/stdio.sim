pub type size_t = usize
pub type fpos_t = isize
pub struct FILE{}

@extern("stdio")
pub let stdio: *?FILE
@extern("stdout")
pub let stdout: *?FILE
@extern("stderr")
pub let stderr: *?FILE

@extern("clearerr")
pub func clearerr(stream: *?FILE)

@extern("feof")
pub func feof(stream: *?FILE)int

@extern("ferror")
pub func ferror(stream: *?FILE)int

@extern("fflush")
pub func fflush(stream: *?FILE)int

@extern("fclose")
pub func fclose(stream: *?FILE)int

@extern("fgetpos")
pub func fgetpos(stream: *?FILE, pos: *?fpos_t)int

@extern("fopen")
pub func fopen(filename: string, mode: string)*?FILE

@extern("fread")
pub func fread(ptr: voidptr, size: size_t, nmemb: size_t, stream: *?FILE)size_t

@extern("freopen")
pub func freopen(filename: string, mode: string, stream: *?FILE)*?FILE

@extern("fseek")
pub func fseek(stream: *?FILE, offset: long, whence: int)int

@extern("fsetpos")
pub func fsetpos(stream: *?FILE, pos: *?fpos_t)int

@extern("ftell")
pub func ftell(stream: *?FILE)long

@extern("fwrite")
pub func fwrite(ptr: voidptr, size: size_t, nmemb: size_t, stream: *?FILE)size_t

@extern("remove")
pub func remove(filename: string)int

@extern("rename")
pub func rename(old_filename: string, new_filename: string)int

@extern("rewind")
pub func rewind(stream: *?FILE)

@extern("setbuf")
pub func setbuf(stream: *?FILE, buffer: string)

@extern("setvbuf")
pub func setvbuf(stream: *?FILE, buffer: string, mode: int, size: size_t)int

@extern("tmpfile")
pub func tmpfile()*?FILE

@extern("tmpnam")
pub func tmpnam(str: string)*?char

@var_arg
@extern("fprintf")
pub func fprintf(stream: *?FILE, format: string)int

@var_arg
@extern("printf")
pub func printf(format: string)int

@var_arg
@extern("sprintf")
pub func sprintf(str: string, format: string)int

@var_arg
@extern("vfprintf")
pub func vfprintf(stream: *?FILE, format: string)int

@var_arg
@extern("vprintf")
pub func vprintf(format: char)int

@var_arg
@extern("vsprintf")
pub func vsprintf(str: string, format: string)int

@var_arg
@extern("fscanf")
pub func fscanf(stream: *?FILE, format: string)int

@var_arg
@extern("scanf")
pub func scanf(format: string)int

@var_arg
@extern("sscanf")
pub func sscanf(str: string, format: string)int

@extern("fgetc")
pub func fgetc(stream: *?FILE)int

@extern("fgets")
pub func fgets(str: string, n: int, stream: *?FILE)*char

@extern("fputc")
pub func fputc(char: int, stream: *?FILE)int

@extern("fputs")
pub func fputs(str: string, stream: *?FILE)int

@extern("getc")
pub func getc(stream: *?FILE)int

@extern("getchar")
pub func getchar()int

@extern("gets")
pub func gets(str: string)string

@extern("putc")
pub func putc(char: int, stream: *?FILE)int

@extern("putchar")
pub func putchar(char: int)int

@extern("puts")
pub func puts(str: string)int

@extern("ungetc")
pub func ungetc(char: int, stream: *?FILE)int

@extern("perror")
pub func perror(str: string)

@var_arg
@extern("snprintf")
pub func snprintf(str: string, size: size_t, format: string)int